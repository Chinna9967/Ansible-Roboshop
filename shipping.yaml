- name: installing shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: installing maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  
  - when: output.rc != 0
    name: create roboshop user
    become: yes
    ansible.builtin.user:
      name: roboshop 

  - name: /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output is: {{directory}}"

  - name: crate a directory if directory doesn't exist
    ansible.builtin.file:
      path: /app
      state: directory
    when: directory.stat.exists == False

  - name: Download and extract shipping  atrifact
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /app
      remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: renaming of jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  
  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true
      name: shipping

  - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes 

  - name: installing of mysql
    ansible.builtin.yum:
      name: mysql
      state: installed

   - name: shipping schema load
     ansible.builtin.command: mysql -h mongodb.kpdigital.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

   - name: syatemctl restart 
     ansible.builtin.service:
      name: shipping
      state: restarted 


  